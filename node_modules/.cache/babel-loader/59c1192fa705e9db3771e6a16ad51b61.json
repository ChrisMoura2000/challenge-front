{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction ShoppingCart() {\n  _s();\n\n  const calculateTotalPrice = allProducts => {\n    let totalPrice = 0;\n    allProducts.cart.item.forEach(product => {\n      totalPrice += product.bestPrice;\n    });\n    const totalPriceFormated = (totalPrice / 100).toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n    return totalPriceFormated;\n  };\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState({});\n  const [totalPrice, setTotalPrice] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://products-teste.herokuapp.com/\").then(response => response.json()).then(result => {\n      setIsLoading(false);\n      setProducts(result);\n      setTotalPrice(calculateTotalPrice(result));\n    });\n  }, []);\n  return 'oi'; // return isLoading ? (\n  //   <h1>Loading...</h1>\n  // ) : (\n  //   <div className=\"shopping-cart\">\n  //     <div className=\"shopping-cart-body\">\n  //       {products.cart.item.map((product, index) => (\n  //         <div className=\"cart-item\" key={index}>\n  //           <img src={imagemTeste} alt=\"teste\" className=\"img-item\" />\n  //           <div>\n  //             <p className=\"name-item\">{product.name}</p>\n  //             <span className=\"qtd\">Qtd.: {product.quantity}</span>\n  //             <span className=\"price\">{product.bestPriceFormated}</span>\n  //           </div>\n  //         </div>\n  //       ))}\n  //     </div>\n  //     <div className=\"shopping-cart-footer\">\n  //       <h3>Total do pedido: {totalPrice}</h3>\n  //     </div>\n  //     <div className=\"shopping-cart-botton\">\n  //       <button type=\"button\" className=\"btn-finalize\">\n  //         FINALIZAR COMPRA\n  //       </button>\n  //     </div>\n  //   </div>\n  // );\n}\n\n_s(ShoppingCart, \"ES2YdouSQ7I7/WV0okTpAHQZ664=\");\n\n_c = ShoppingCart;\nexport default ShoppingCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCart\");","map":{"version":3,"sources":["/home/christopher/Documents/eplus/src/components/ShoopingCart.jsx"],"names":["useEffect","useState","ShoppingCart","calculateTotalPrice","allProducts","totalPrice","cart","item","forEach","product","bestPrice","totalPriceFormated","toLocaleString","style","currency","isLoading","setIsLoading","products","setProducts","setTotalPrice","fetch","then","response","json","result"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,mBAAmB,GAAIC,WAAD,IAAiB;AAC3C,QAAIC,UAAU,GAAG,CAAjB;AACAD,IAAAA,WAAW,CAACE,IAAZ,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA+BC,OAAD,IAAa;AACzCJ,MAAAA,UAAU,IAAII,OAAO,CAACC,SAAtB;AACD,KAFD;AAGA,UAAMC,kBAAkB,GAAG,CAACN,UAAU,GAAG,GAAd,EAAmBO,cAAnB,CAAkC,OAAlC,EAA2C;AACpEC,MAAAA,KAAK,EAAE,UAD6D;AAEpEC,MAAAA,QAAQ,EAAE;AAF0D,KAA3C,CAA3B;AAIA,WAAOH,kBAAP;AACD,GAVD;;AAYA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,UAAD,EAAac,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChBR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,WAAW,CAACM,MAAD,CAAX;AACAL,MAAAA,aAAa,CAAChB,mBAAmB,CAACqB,MAAD,CAApB,CAAb;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AASA,SAAO,IAAP,CA1BsB,CA2BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;GArDQtB,Y;;KAAAA,Y;AAuDT,eAAeA,YAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction ShoppingCart() {\n  const calculateTotalPrice = (allProducts) => {\n    let totalPrice = 0;\n    allProducts.cart.item.forEach((product) => {\n      totalPrice += product.bestPrice;\n    });\n    const totalPriceFormated = (totalPrice / 100).toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    });\n    return totalPriceFormated;\n  };\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState({});\n  const [totalPrice, setTotalPrice] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"https://products-teste.herokuapp.com/\")\n      .then((response) => response.json())\n      .then((result) => {\n        setIsLoading(false)\n        setProducts(result)\n        setTotalPrice(calculateTotalPrice(result))\n      });\n  }, []);\n  return 'oi'\n  // return isLoading ? (\n  //   <h1>Loading...</h1>\n  // ) : (\n  //   <div className=\"shopping-cart\">\n  //     <div className=\"shopping-cart-body\">\n  //       {products.cart.item.map((product, index) => (\n  //         <div className=\"cart-item\" key={index}>\n  //           <img src={imagemTeste} alt=\"teste\" className=\"img-item\" />\n  //           <div>\n  //             <p className=\"name-item\">{product.name}</p>\n  //             <span className=\"qtd\">Qtd.: {product.quantity}</span>\n  //             <span className=\"price\">{product.bestPriceFormated}</span>\n  //           </div>\n  //         </div>\n  //       ))}\n  //     </div>\n  //     <div className=\"shopping-cart-footer\">\n  //       <h3>Total do pedido: {totalPrice}</h3>\n  //     </div>\n  //     <div className=\"shopping-cart-botton\">\n  //       <button type=\"button\" className=\"btn-finalize\">\n  //         FINALIZAR COMPRA\n  //       </button>\n  //     </div>\n  //   </div>\n  // );\n}\n\nexport default ShoppingCart;\n"]},"metadata":{},"sourceType":"module"}