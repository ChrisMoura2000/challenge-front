{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/eplus/src/MyContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext();\n\nconst MyContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState({});\n  const [totalPrice, setTotalPrice] = useState(\"\"); //   const [isOpen, setIsOpen] = useState(\"\");\n\n  const calculateTotalPrice = allProducts => {\n    let totalPrice = 0;\n    allProducts.cart.item.forEach(product => {\n      totalPrice += product.bestPrice;\n    });\n    const totalPriceFormated = (totalPrice / 100).toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\"\n    });\n    return totalPriceFormated;\n  };\n\n  useEffect(() => {\n    fetch(\"https://products-teste.herokuapp.com/\").then(response => response.json()).then(result => {\n      setProducts(result);\n      setTotalPrice(calculateTotalPrice(result));\n      setIsLoading(false);\n    });\n  }, []);\n  const context = {\n    products,\n    isLoading,\n    totalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(MyContextProvider, \"ES2YdouSQ7I7/WV0okTpAHQZ664=\");\n\n_c = MyContextProvider;\nMyContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { MyContext, MyContextProvider as Provider };\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContextProvider\");","map":{"version":3,"sources":["/home/christopher/Documents/eplus/src/MyContext.js"],"names":["React","createContext","useState","useEffect","PropTypes","MyContext","MyContextProvider","children","isLoading","setIsLoading","products","setProducts","totalPrice","setTotalPrice","calculateTotalPrice","allProducts","cart","item","forEach","product","bestPrice","totalPriceFormated","toLocaleString","style","currency","fetch","then","response","json","result","context","propTypes","node","isRequired","Provider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,gBAAGJ,aAAa,EAA/B;;AAEA,MAAMK,iBAAiB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C,CAH0C,CAI5C;;AAEE,QAAMY,mBAAmB,GAAIC,WAAD,IAAiB;AAC3C,QAAIH,UAAU,GAAG,CAAjB;AACAG,IAAAA,WAAW,CAACC,IAAZ,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA+BC,OAAD,IAAa;AACzCP,MAAAA,UAAU,IAAIO,OAAO,CAACC,SAAtB;AACD,KAFD;AAGA,UAAMC,kBAAkB,GAAG,CAACT,UAAU,GAAG,GAAd,EAAmBU,cAAnB,CAAkC,OAAlC,EAA2C;AACpEC,MAAAA,KAAK,EAAE,UAD6D;AAEpEC,MAAAA,QAAQ,EAAE;AAF0D,KAA3C,CAA3B;AAIA,WAAOH,kBAAP;AACD,GAVD;;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChBlB,MAAAA,WAAW,CAACkB,MAAD,CAAX;AACAhB,MAAAA,aAAa,CAACC,mBAAmB,CAACe,MAAD,CAApB,CAAb;AACApB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUA,QAAMqB,OAAO,GAAG;AACdpB,IAAAA,QADc;AAEdF,IAAAA,SAFc;AAGdI,IAAAA;AAHc,GAAhB;AAMA,sBAAO,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEkB,OAA3B;AAAA,cAAqCvB;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnCD;;GAAMD,iB;;KAAAA,iB;AAqCNA,iBAAiB,CAACyB,SAAlB,GAA8B;AAC5BxB,EAAAA,QAAQ,EAAEH,SAAS,CAAC4B,IAAV,CAAeC;AADG,CAA9B;AAIA,SAAS5B,SAAT,EAAoBC,iBAAiB,IAAI4B,QAAzC","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst MyContext = createContext();\n\nconst MyContextProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [products, setProducts] = useState({});\n  const [totalPrice, setTotalPrice] = useState(\"\");\n//   const [isOpen, setIsOpen] = useState(\"\");\n\n  const calculateTotalPrice = (allProducts) => {\n    let totalPrice = 0;\n    allProducts.cart.item.forEach((product) => {\n      totalPrice += product.bestPrice;\n    });\n    const totalPriceFormated = (totalPrice / 100).toLocaleString(\"pt-br\", {\n      style: \"currency\",\n      currency: \"BRL\",\n    });\n    return totalPriceFormated;\n  };\n\n  useEffect(() => {\n    fetch(\"https://products-teste.herokuapp.com/\")\n      .then((response) => response.json())\n      .then((result) => {\n        setProducts(result);\n        setTotalPrice(calculateTotalPrice(result));\n        setIsLoading(false);\n      });\n  }, []);\n\n  const context = {\n    products,\n    isLoading,\n    totalPrice\n  };\n\n  return <MyContext.Provider value={context}>{children}</MyContext.Provider>;\n};\n\nMyContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { MyContext, MyContextProvider as Provider };\n"]},"metadata":{},"sourceType":"module"}