{"ast":null,"code":"var _jsxFileName = \"/home/christopher/Documents/eplus/src/MyContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/createContext();\n\nconst MyContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [teste, setTeste] = useState('Testano');\n  const context = {\n    teste,\n    setTeste\n  };\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyContextProvider, \"0TmphZVu4E2C8OzgtAhagVsWDXI=\");\n\n_c = MyContextProvider;\nMyContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { MyContext, MyContextProvider as Provider };\n\nvar _c;\n\n$RefreshReg$(_c, \"MyContextProvider\");","map":{"version":3,"sources":["/home/christopher/Documents/eplus/src/MyContext.js"],"names":["React","createContext","useState","PropTypes","MyContext","MyContextProvider","children","teste","setTeste","context","propTypes","node","isRequired","Provider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,SAAS,gBAAGH,aAAa,EAA/B;;AAEA,MAAMI,iBAAiB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,SAAD,CAAlC;AAEA,QAAMO,OAAO,GAAG;AACdF,IAAAA,KADc;AAEdC,IAAAA;AAFc,GAAhB;AAKA,sBACE,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAGC,OAA5B;AAAA,cACIH;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbD;;GAAMD,iB;;KAAAA,iB;AAeNA,iBAAiB,CAACK,SAAlB,GAA8B;AAC5BJ,EAAAA,QAAQ,EAAEH,SAAS,CAACQ,IAAV,CAAeC;AADG,CAA9B;AAIA,SAASR,SAAT,EAAoBC,iBAAiB,IAAIQ,QAAzC","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst MyContext = createContext();\n\nconst MyContextProvider = ({ children }) => {\n  const [teste, setTeste] = useState('Testano')\n\n  const context = {\n    teste,\n    setTeste,\n  };\n\n  return (\n    <MyContext.Provider value={ context }>\n      { children }\n    </MyContext.Provider>\n  );\n};\n\nMyContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport { MyContext, MyContextProvider as Provider };\n"]},"metadata":{},"sourceType":"module"}